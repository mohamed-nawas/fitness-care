{"version":3,"sources":["components/Footer.jsx","components/Header.jsx","components/Spinner.jsx","pages/PageNotFound.jsx","pages/Products.jsx","others/Reducer.jsx","others/Context.jsx","pages/Detail.jsx","pages/Cart.jsx","services/shippingService.js","pages/Checkout.jsx","pages/Home.jsx","App.jsx","others/ErrorBoundary.jsx","index.js"],"names":["Footer","React","createElement","activeStyle","color","Header","Link","to","alt","src","NavLink","Spinner","className","PageNotFound","Products","size","setSize","useState","category","useParams","data","products","error","loading","useFetch","filteredProducts","filter","p","skus","find","s","parseInt","length","Fragment","id","htmlFor","value","onChange","e","target","map","key","concat","image","name","price","cartReducer","cartState","action","type","Error","sku","i","_objectSpread","quantity","checkoutReducer","checkoutState","event","CartContext","createContext","initialCartState","storedCart","localStorage","getItem","JSON","parse","err","console","CartProvider","children","cart","dispatch","useReducer","useEffect","setItem","stringify","Provider","ShippingContext","initialShippingAddress","storedShipping","ShippingAddressProvider","shippingAddress","dispatchShipping","Detail","useContext","setSku","navigate","useNavigate","product","description","onClick","disabled","Cart","urls","useFetchAll","numInCart","useMemo","reduce","total","item","itemInCart","aria-label","STATUS","Checkout","totalPrice","status","setStatus","saveError","setSaveError","touched","dispatchTouched","errors","address","result","city","country","getErrors","isValid","Object","keys","handleChange","persist","handleBlur","async","handleSubmit","preventDefault","Promise","resolve","setTimeout","index","findIndex","a","push","success","saveShippingAddress","style","fontWeight","Math","ceil","onSubmit","marginBottom","role","errKey","onBlur","Home","setCategory","array","prodCat","Set","c","App","Routes","Route","path","element","ErrorBoundary","Component","constructor","props","super","this","state","hasError","render","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.44f33e2c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer>\n      <p>\n        This site is created for demonstrative purposes only and does not offer\n        any real products or services.\n      </p>\n      <p>&copy; Mohamed Nawaz @ CleanCodeOnline 2021</p>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst activeStyle = {\n  color: \"lightblue\",\n};\n\nexport default function Header() {\n  return (\n    <header>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">\n              <img alt=\"Carved Rock Fitness\" src=\"/images/logo.png\" />\n            </Link>\n          </li>\n          <li>\n            <NavLink activeStyle={activeStyle} to=\"/shoes\">\n              Shoes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeStyle={activeStyle} to=\"/gym\">\n              Muscle\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeStyle={activeStyle} to=\"/streaching\">\n              Fitness\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeStyle={activeStyle} to=\"/cart\">\n              Cart\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Spinner() {\n  return (\n    <div className=\"lds-container\">\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function PageNotFound() {\n  return <h1>Page Not Found.</h1>;\n}\n","import React from \"react\";\nimport useFetch from \"../services/useFetch\";\nimport Spinner from \"../components/Spinner\";\nimport PageNotFound from \"./PageNotFound\";\nimport { useParams, Link } from \"react-router-dom\";\n\nexport default function Products() {\n  const [size, setSize] = React.useState(\"\");\n  const { category } = useParams();\n\n  const {\n    data: products,\n    error,\n    loading,\n  } = useFetch(\"products?category=\" + category);\n\n  const filteredProducts = size\n    ? products.filter((p) => p.skus.find((s) => s.size === parseInt(size)))\n    : products;\n\n  if (error) throw error;\n  if (loading) return <Spinner />;\n  if (products.length === 0) return <PageNotFound />;\n\n  return (\n    <>\n      <section id=\"filters\">\n        <label htmlFor=\"size\">Filter by Size:</label>{\" \"}\n        <select\n          id=\"size\"\n          value={size}\n          onChange={(e) => {\n            // debugger;\n            setSize(e.target.value);\n          }}\n        >\n          <option value=\"\">All sizes</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n        </select>\n      </section>\n      {size && <h2>{filteredProducts.length} items found</h2>}\n      <section id=\"products\">\n        {filteredProducts.map((p) => (\n          <div key={p.id} className=\"product\">\n            <Link to={`/${category}/${p.id}`}>\n              <img src={`/images/${p.image}`} alt={p.name} />\n              <h3>{p.name}</h3>\n              <p>${p.price}</p>\n            </Link>\n          </div>\n        ))}\n      </section>\n    </>\n  );\n}\n","export const cartReducer = (cartState, action) => {\n  switch (action.type) {\n    default:\n      throw new Error(\"Unhandled action type \" + action.type);\n    case \"empty-cart\":\n      return [];\n    case \"add-to-cart\": {\n      const { id, sku } = action;\n      const itemInCart = cartState.find((i) => i.sku === sku);\n      if (itemInCart) {\n        return cartState.map((i) =>\n          i.sku === sku ? { ...i, quantity: i.quantity + 1 } : i\n        );\n      } else {\n        return [...cartState, { id, sku, quantity: 1 }];\n      }\n    }\n    case \"update-cart-quantity\":\n      const { sku, quantity } = action;\n      return quantity === 0\n        ? cartState.filter((i) => i.sku !== sku)\n        : cartState.map((i) => (i.sku === sku ? { ...i, quantity } : i));\n  }\n};\n\nexport const checkoutReducer = (checkoutState, action) => {\n  switch (action.type) {\n    default:\n      throw new Error(\"Unhandled action type \" + action.type);\n    case \"handle-address-change\":\n      const { e } = action;\n      return { ...checkoutState, [e.target.id]: e.target.value };\n    case \"handle-touched-change\":\n      const { event } = action;\n      return { ...checkoutState, [event.target.id]: true };\n  }\n};\n","import React from \"react\";\nimport { cartReducer, checkoutReducer } from \"./Reducer\";\n\n// ---- CART CONTEXT ---- //\nexport const CartContext = React.createContext(null);\n\n// Load cart safely\nlet initialCartState = [];\ntry {\n  const storedCart = localStorage.getItem(\"cart\");\n  if (storedCart) {\n    initialCartState = JSON.parse(storedCart);\n  }\n} catch (err) {\n  console.error(\"Failed to parse cart from localStorage\", err);\n}\n\nexport function CartProvider({ children }) {\n  const [cart, dispatch] = React.useReducer(cartReducer, initialCartState);\n\n  React.useEffect(() => {\n    try {\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    } catch (err) {\n      console.error(\"Failed to save cart to localStorage\", err);\n    }\n  }, [cart]);\n\n  return (\n    <CartContext.Provider value={{ cart, dispatch }}>\n      {children}\n    </CartContext.Provider>\n  );\n}\n\n// ---- SHIPPING CONTEXT ---- //\nexport const ShippingContext = React.createContext(null);\n\nlet initialShippingAddress = {};\ntry {\n  const storedShipping = localStorage.getItem(\"shipping-address\");\n  if (storedShipping) {\n    initialShippingAddress = JSON.parse(storedShipping);\n  }\n} catch (err) {\n  console.error(\"Failed to parse shipping address from localStorage\", err);\n}\n\nexport function ShippingAddressProvider({ children }) {\n  const [shippingAddress, dispatchShipping] = React.useReducer(\n    checkoutReducer,\n    initialShippingAddress\n  );\n\n  React.useEffect(() => {\n    try {\n      localStorage.setItem(\n        \"shipping-address\",\n        JSON.stringify(shippingAddress)\n      );\n    } catch (err) {\n      console.error(\"Failed to save shipping address to localStorage\", err);\n    }\n  }, [shippingAddress]);\n\n  return (\n    <ShippingContext.Provider value={{ shippingAddress, dispatchShipping }}>\n      {children}\n    </ShippingContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { CartContext } from \"../others/Context\";\nimport PageNotFound from \"./PageNotFound\";\nimport useFetch from \"../services/useFetch\";\nimport Spinner from \"../components//Spinner\";\n\nexport default function Detail() {\n  const { dispatch } = React.useContext(CartContext);\n  const [sku, setSku] = React.useState(\"\");\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const { data: product, error, loading } = useFetch(\"products/\" + id);\n\n  if (loading) return <Spinner />;\n  if (!product) return <PageNotFound />;\n  if (error) throw error;\n\n  return (\n    <div id=\"detail\">\n      <div className=\"detail-column\">\n        <h1>{product.name}</h1>\n        <p>{product.description}</p>\n        <p id=\"price\">${product.price}</p>\n        <select id=\"size\" value={sku} onChange={(e) => setSku(e.target.value)}>\n          <option value=\"\">Size</option>\n          {product.skus.map((s) => (\n            <option key={s.sku} value={s.sku}>\n              {s.size}\n            </option>\n          ))}\n        </select>\n        <p>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              dispatch({ type: \"add-to-cart\", id, sku });\n              navigate(\"/cart\");\n            }}\n            disabled={!sku}\n          >\n            Add to Cart\n          </button>\n        </p>\n      </div>\n      <div className=\"detail-column\">\n        <img src={`/images/${product.image}`} alt={product.category} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CartContext } from \"../others/Context\";\nimport useFetchAll from \"../services/useFetchAll\";\nimport Spinner from \"../components/Spinner\";\n\nexport default function Cart() {\n  const { cart, dispatch } = React.useContext(CartContext);\n  const navigate = useNavigate();\n  const urls = cart.map((i) => `products/${i.id}`);\n  const { data: products, loading, error } = useFetchAll(urls);\n\n  function renderItem(itemInCart) {\n    const { id, sku, quantity } = itemInCart;\n    const { price, name, image, skus } = products.find(\n      (p) => p.id === parseInt(id)\n    );\n\n    const { size } = skus.find((s) => s.sku === sku);\n\n    return (\n      <li key={sku} className=\"cart-item\">\n        <img src={`/images/${image}`} alt={name} />\n        <div>\n          <h3>{name}</h3>\n          <p>${price * quantity}</p>\n          <p>Size: {size}</p>\n          <p>\n            <select\n              aria-label={`Select quantity for ${name} size ${size}`}\n              onChange={(e) =>\n                dispatch({\n                  type: \"update-cart-quantity\",\n                  sku,\n                  quantity: parseInt(e.target.value),\n                })\n              }\n              value={quantity}\n            >\n              <option value=\"0\">Remove</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </p>\n        </div>\n      </li>\n    );\n  }\n\n  const numInCart = React.useMemo(\n    () => cart.reduce((total, item) => total + item.quantity, 0),\n    [cart]\n  );\n\n  if (loading) return <Spinner />;\n  if (error) throw error;\n\n  return (\n    <>\n      <section id=\"cart\">\n        {cart.length === 0 ? (\n          <h1>Cart is empty</h1>\n        ) : numInCart === 1 ? (\n          `${numInCart} item found`\n        ) : (\n          `${numInCart} items found`\n        )}\n        <ul>{cart.map(renderItem)}</ul>\n      </section>\n      {cart.length ? (\n        <p>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => navigate(\"/checkout\")}\n          >\n            Checkout\n          </button>\n        </p>\n      ) : null}\n    </>\n  );\n}\n","// const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nconst shippingAddress = [\n  {\n    \"city\": \"Mumbai\",\n    \"country\": \"India\",\n    \"id\": 1\n  },\n  {\n    \"city\": \"London\",\n    \"country\": \"United Kingdom\",\n    \"id\": 2\n  },\n  {\n    \"country\": \"United Kingdom\",\n    \"city\": \"London\",\n    \"id\": 3\n  }\n];\n\n// export async function getShippingAddress(userId) {\n//   return fetch(baseUrl + \"shippingAddress/\" + userId).then((response) => {\n//     if (response.ok) return response.json();\n//     throw response;\n//   });\n// }\n\n// export async function saveShippingAddress(address) {\n//   return fetch(baseUrl + \"shippingAddress\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(address),\n//   });\n// }\n\nexport async function getShippingAddress(userId) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const address = shippingAddress.find((addr) => addr.id === parseInt(userId));\n      if (address) resolve(address);\n      else reject(new Error(\"Shipping address not found\"));\n    }, 200);\n  });\n}\n\nexport async function saveShippingAddress(address) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const index = shippingAddress.findIndex((a) => a.id === address.id);\n      if (index >= 0) {\n        shippingAddress[index] = address;\n      } else {\n        shippingAddress.push(address);\n      }\n      resolve({ success: true });\n    }, 200);\n  });\n}\n","import React from \"react\";\nimport { CartContext, ShippingContext } from \"../others/Context\";\nimport { checkoutReducer } from \"../others/Reducer\";\nimport { saveShippingAddress } from \"../services/shippingService\";\nimport useFetchAll from \"../services/useFetchAll\";\nimport Spinner from \"../components/Spinner\";\n\nconst STATUS = {\n  IDLE: \"IDLE\",\n  SUBMITTING: \"SUBMITTING\",\n  SUBMITTED: \"SUBMITTED\",\n  COMPLETED: \"COMPLETED\",\n  PAYED: \"PAYED\",\n};\n\n// Declaring outside component to avoid recreation on each render\n// const emptyAddress = {\n//   city: \"\",\n//   country: \"\",\n// };\n\nexport default function Checkout() {\n  let totalPrice = 0;\n  const { cart, dispatch } = React.useContext(CartContext);\n  const urls = cart.map((i) => `products/${i.id}`);\n  const { data: products, loading, error } = useFetchAll(urls);\n  const { shippingAddress, dispatchShipping } =\n    React.useContext(ShippingContext);\n\n  // const [address, setAddress] = React.useState(emptyAddress);\n  // const [address, dispatchAddress] = React.useReducer(\n  //   checkoutReducer,\n  //   emptyAddress\n  // );\n  const [status, setStatus] = React.useState(STATUS.IDLE);\n  const [saveError, setSaveError] = React.useState(null);\n  // const [touched, setTouched] = React.useState({});\n  const [touched, dispatchTouched] = React.useReducer(checkoutReducer, {});\n\n  const errors = getErrors(shippingAddress);\n  const isValid = Object.keys(errors).length === 0;\n\n  function getErrors(address) {\n    const result = {};\n    if (!address.city) result.city = \"city is required\";\n    if (!address.country) result.country = \"country is required\";\n    return result;\n  }\n\n  function handleChange(e) {\n    e.persist();\n    // setAddress((currAddress) => {\n    //   return { ...currAddress, [e.target.id]: e.target.value };\n    // });\n    dispatchShipping({ type: \"handle-address-change\", e });\n  }\n\n  function handleBlur(event) {\n    event.persist();\n    // setTouched((curr) => {\n    //   return { ...curr, [event.target.id]: true };\n    // });\n    dispatchTouched({ type: \"handle-touched-change\", event });\n  }\n\n  function handleCheckout(e) {\n    e.preventDefault();\n    dispatch({ type: \"empty-cart\" });\n    setStatus(STATUS.PAYED);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setStatus(STATUS.SUBMITTING);\n    if (isValid) {\n      try {\n        localStorage.setItem(\n          \"shipping-address\",\n          JSON.stringify(shippingAddress)\n        );\n        await saveShippingAddress(shippingAddress);\n        setStatus(STATUS.COMPLETED);\n      } catch (e) {\n        setSaveError(e);\n      }\n    } else {\n      setStatus(STATUS.SUBMITTED);\n    }\n  }\n\n  function renderItem(itemInCart) {\n    const { id, sku, quantity } = itemInCart;\n    const { price, name, image, skus } = products.find(\n      (p) => p.id === parseInt(id)\n    );\n    const { size } = skus.find((s) => s.sku === sku);\n\n    totalPrice = totalPrice + price * quantity;\n\n    return (\n      <li key={sku} className=\"cart-item\">\n        <img src={`/images/${image}`} alt={name} />\n        <div>\n          <h3>{name}</h3>\n          <p>${price * quantity}</p>\n          <p>Size: {size}</p>\n          <p>Quantity: {quantity}</p>\n        </div>\n      </li>\n    );\n  }\n\n  const numInCart = React.useMemo(\n    () => cart.reduce((total, item) => total + item.quantity, 0),\n    [cart]\n  );\n\n  if (loading) return <Spinner />;\n  if (error) throw error;\n  if (saveError) throw saveError;\n  if (status === STATUS.PAYED) return <h1>Thanks for shopping</h1>;\n\n  return (\n    <>\n      {shippingAddress.city && shippingAddress.country ? (\n        <main id=\"checkout-main\">\n          <div className=\"cart\">\n            <h1>Cart</h1>\n            <section id=\"cart\">\n              {numInCart === 1\n                ? `${numInCart} item found`\n                : `${numInCart} items found`}\n              <ul>{cart.map(renderItem)}</ul>\n            </section>\n            <p style={{ color: \"green\", fontWeight: \"bold\" }}>{`$ ${Math.ceil(\n              totalPrice\n            )}`}</p>\n            <form onSubmit={handleCheckout}>\n              <div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  value=\"Checkout\"\n                  disabled={status === STATUS.SUBMITTING}\n                />\n              </div>\n            </form>\n          </div>\n\n          <div className=\"shipping-info\">\n            <div style={{ marginBottom: 20 }}>\n              <h1>Shipping Info</h1>\n            </div>\n            {!isValid && status === STATUS.SUBMITTED && (\n              <div role=\"alert\">\n                <p>Please fix the following errors</p>\n                <ul>\n                  {Object.keys(errors).map((errKey) => {\n                    return <li key={errKey}>{errors[errKey]}</li>;\n                  })}\n                </ul>\n              </div>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"city\">City</label>\n                <br />\n                <input\n                  id=\"city\"\n                  type=\"text\"\n                  value={shippingAddress.city}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.city || status === STATUS.SUBMITTED) && errors.city}\n                </p>\n              </div>\n\n              <div>\n                <label htmlFor=\"country\">Country</label>\n                <br />\n                <select\n                  id=\"country\"\n                  value={shippingAddress.country}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">Select Country</option>\n                  <option value=\"China\">China</option>\n                  <option value=\"India\">India</option>\n                  <option value=\"United Kingdom\">United Kingdom</option>\n                  <option value=\"USA\">USA</option>\n                </select>\n                <p role=\"alert\">\n                  {(touched.country || status === STATUS.SUBMITTED) &&\n                    errors.country}\n                </p>\n              </div>\n\n              <div>\n                {status === STATUS.COMPLETED && (\n                  <p style={{ color: \"blue\" }}>Shipping address saved</p>\n                )}\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  value=\"Save Shipping Info\"\n                  disabled={status === STATUS.SUBMITTING}\n                />\n              </div>\n            </form>\n          </div>\n        </main>\n      ) : (\n        <main id=\"checkout-main\">\n          <div className=\"shipping-info\">\n            <h1>Shipping Info</h1>\n            {!isValid && status === STATUS.SUBMITTED && (\n              <div role=\"alert\">\n                <p>Please fix the following errors</p>\n                <ul>\n                  {Object.keys(errors).map((errKey) => {\n                    return <li key={errKey}>{errors[errKey]}</li>;\n                  })}\n                </ul>\n              </div>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"city\">City</label>\n                <br />\n                <input\n                  id=\"city\"\n                  type=\"text\"\n                  value={shippingAddress.city}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.city || status === STATUS.SUBMITTED) && errors.city}\n                </p>\n              </div>\n\n              <div>\n                <label htmlFor=\"country\">Country</label>\n                <br />\n                <select\n                  id=\"country\"\n                  value={shippingAddress.country}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">Select Country</option>\n                  <option value=\"China\">China</option>\n                  <option value=\"India\">India</option>\n                  <option value=\"United Kingdom\">United Kingdom</option>\n                  <option value=\"USA\">USA</option>\n                </select>\n                <p role=\"alert\">\n                  {(touched.country || status === STATUS.SUBMITTED) &&\n                    errors.country}\n                </p>\n              </div>\n\n              <div>\n                {status === STATUS.COMPLETED && (\n                  <p style={{ color: \"blue\" }}>Shipping address saved</p>\n                )}\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  value=\"Save Shipping Info\"\n                  disabled={status === STATUS.SUBMITTING}\n                />\n              </div>\n            </form>\n          </div>\n        </main>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport useFetch from \"../services/useFetch\";\nimport Spinner from \"../components/Spinner\";\nimport PageNotFound from \"./PageNotFound\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  const [category, setCategory] = React.useState(\"\");\n\n  const { data: products, error, loading } = useFetch(\"products\");\n\n  const filteredProducts = category\n    ? products.filter((p) => p.category === category)\n    : products;\n\n  if (error) throw error;\n  if (loading) return <Spinner />;\n  if (products.length === 0) return <PageNotFound />;\n\n  const array = products.map((p) => {\n    return p.category;\n  });\n\n  const prodCat = [...new Set(array)];\n\n  return (\n    <>\n      <section id=\"filters\">\n        <label htmlFor=\"size\">Filter by Category:</label>{\" \"}\n        <select\n          id=\"size\"\n          value={category}\n          onChange={(e) => {\n            setCategory(e.target.value);\n          }}\n        >\n          <option value=\"\">Select category</option>\n          {prodCat.map((c) => (\n            <option key={c} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n      </section>\n      {category && <h2>{filteredProducts.length} items found</h2>}\n      <section id=\"products\">\n        {filteredProducts.map((p) => (\n          <div key={p.id} className=\"product\">\n            <Link to={`/${p.category}/${p.id}`}>\n              <img src={`/images/${p.image}`} alt={p.name} />\n              <h3>{p.name}</h3>\n              <p>${p.price}</p>\n            </Link>\n          </div>\n        ))}\n      </section>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Products from \"./pages/Products\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Detail from \"./pages/Detail\";\nimport Cart from \"./pages/Cart\";\nimport Checkout from \"./pages/Checkout\";\nimport { ShippingAddressProvider } from \"./others/Context\";\nimport Home from \"./pages/Home\";\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"content\">\n        <Header />\n        <main>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <>\n                  <h1>Welcome to Fitness Care</h1>\n                  <Home />\n                </>\n              }\n            />\n            <Route path=\"/:category\" element={<Products />} />\n            <Route path=\"/:category/:id\" element={<Detail />} />\n            <Route path=\"/cart\" element={<Cart />} />\n            <Route\n              path=\"/checkout\"\n              element={\n                <ShippingAddressProvider>\n                  <Checkout />\n                </ShippingAddressProvider>\n              }\n            />\n          </Routes>\n        </main>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ErrorBoundary from \"./others/ErrorBoundary\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CartProvider } from \"./others/Context\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    <BrowserRouter>\n      <CartProvider>\n        <App />\n      </CartProvider>\n    </BrowserRouter>\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Footer.jsx","components/Header.jsx","services/useFetch.js","components/Spinner.jsx","pages/PageNotFound.jsx","pages/Products.jsx","others/Reducer.jsx","others/Context.jsx","pages/Detail.jsx","services/useFetchAll.js","pages/Cart.jsx","services/shippingService.js","pages/Checkout.jsx","pages/Home.jsx","App.jsx","others/ErrorBoundary.jsx","index.js"],"names":["Footer","React","createElement","activeStyle","color","Header","Link","to","alt","src","NavLink","baseUrl","process","REACT_APP_API_BASE_URL","useFetch","url","isMounted","useRef","data","setData","useState","error","setError","loading","setLoading","useEffect","current","async","response","fetch","ok","json","e","init","Spinner","className","PageNotFound","Products","size","setSize","category","useParams","products","filteredProducts","filter","p","skus","find","s","parseInt","length","Fragment","id","htmlFor","value","onChange","target","map","key","concat","image","name","price","cartReducer","cartState","action","type","Error","sku","i","_objectSpread","quantity","checkoutReducer","checkoutState","event","CartContext","createContext","initialCartState","storedCart","localStorage","getItem","JSON","parse","console","CartProvider","props","cart","dispatch","useReducer","setItem","stringify","Provider","children","ShippingContext","initialShippingAddress","storedAddress","ShippingAddressProvider","shippingAddress","dispatchShipping","Detail","useContext","setSku","navigate","useNavigate","product","description","onClick","disabled","useFetchAll","urls","promises","then","Promise","all","catch","finally","Cart","numInCart","useMemo","reduce","total","item","itemInCart","aria-label","STATUS","Checkout","totalPrice","status","setStatus","saveError","setSaveError","touched","dispatchTouched","errors","address","result","city","country","getErrors","isValid","Object","keys","handleChange","persist","handleBlur","handleSubmit","preventDefault","resolve","setTimeout","index","findIndex","a","push","success","saveShippingAddress","style","fontWeight","Math","ceil","onSubmit","marginBottom","role","errKey","onBlur","Home","setCategory","array","prodCat","Set","c","App","Routes","Route","path","element","ErrorBoundary","Component","constructor","super","this","state","hasError","render","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.1666cbd8.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <footer>\n      <p>\n        This site is created for demonstrative purposes only and does not offer\n        any real products or services.\n      </p>\n      <p>&copy; Mohamed Nawaz @ CleanCodeOnline 2021</p>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst activeStyle = {\n  color: \"lightblue\",\n};\n\nexport default function Header() {\n  return (\n    <header>\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\">\n              <img alt=\"Carved Rock Fitness\" src=\"/images/logo.png\" />\n            </Link>\n          </li>\n          <li>\n            <NavLink activeStyle={activeStyle} to=\"/shoes\">\n              Shoes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeStyle={activeStyle} to=\"/gym\">\n              Muscle\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeStyle={activeStyle} to=\"/streaching\">\n              Fitness\n            </NavLink>\n          </li>\n          <li>\n            <NavLink activeStyle={activeStyle} to=\"/cart\">\n              Cart\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n","import React from \"react\";\n\nconst baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nexport default function useFetch(url) {\n  const isMounted = React.useRef(false);\n  const [data, setData] = React.useState(null);\n  const [error, setError] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    isMounted.current = true;\n    async function init() {\n      try {\n        const response = await fetch(baseUrl + url);\n        if (response.ok) {\n          const json = await response.json();\n          if (isMounted.current) setData(json);\n        } else {\n          throw response;\n        }\n      } catch (e) {\n        if (isMounted.current) setError(e);\n      } finally {\n        if (isMounted.current) setLoading(false);\n      }\n    }\n    init();\n\n    return () => (isMounted.current = false);\n  }, [url]);\n\n  return { data, error, loading };\n}\n","import React from \"react\";\n\nexport default function Spinner() {\n  return (\n    <div className=\"lds-container\">\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function PageNotFound() {\n  return <h1>Page Not Found.</h1>;\n}\n","import React from \"react\";\nimport useFetch from \"../services/useFetch\";\nimport Spinner from \"../components/Spinner\";\nimport PageNotFound from \"./PageNotFound\";\nimport { useParams, Link } from \"react-router-dom\";\n\nexport default function Products() {\n  const [size, setSize] = React.useState(\"\");\n  const { category } = useParams();\n\n  const {\n    data: products,\n    error,\n    loading,\n  } = useFetch(\"products?category=\" + category);\n\n  const filteredProducts = size\n    ? products.filter((p) => p.skus.find((s) => s.size === parseInt(size)))\n    : products;\n\n  if (error) throw error;\n  if (loading) return <Spinner />;\n  if (products.length === 0) return <PageNotFound />;\n\n  return (\n    <>\n      <section id=\"filters\">\n        <label htmlFor=\"size\">Filter by Size:</label>{\" \"}\n        <select\n          id=\"size\"\n          value={size}\n          onChange={(e) => {\n            // debugger;\n            setSize(e.target.value);\n          }}\n        >\n          <option value=\"\">All sizes</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n        </select>\n      </section>\n      {size && <h2>{filteredProducts.length} items found</h2>}\n      <section id=\"products\">\n        {filteredProducts.map((p) => (\n          <div key={p.id} className=\"product\">\n            <Link to={`/${category}/${p.id}`}>\n              <img src={`/images/${p.image}`} alt={p.name} />\n              <h3>{p.name}</h3>\n              <p>${p.price}</p>\n            </Link>\n          </div>\n        ))}\n      </section>\n    </>\n  );\n}\n","export const cartReducer = (cartState, action) => {\n  switch (action.type) {\n    default:\n      throw new Error(\"Unhandled action type \" + action.type);\n    case \"empty-cart\":\n      return [];\n    case \"add-to-cart\": {\n      const { id, sku } = action;\n      const itemInCart = cartState.find((i) => i.sku === sku);\n      if (itemInCart) {\n        return cartState.map((i) =>\n          i.sku === sku ? { ...i, quantity: i.quantity + 1 } : i\n        );\n      } else {\n        return [...cartState, { id, sku, quantity: 1 }];\n      }\n    }\n    case \"update-cart-quantity\":\n      const { sku, quantity } = action;\n      return quantity === 0\n        ? cartState.filter((i) => i.sku !== sku)\n        : cartState.map((i) => (i.sku === sku ? { ...i, quantity } : i));\n  }\n};\n\nexport const checkoutReducer = (checkoutState, action) => {\n  switch (action.type) {\n    default:\n      throw new Error(\"Unhandled action type \" + action.type);\n    case \"handle-address-change\":\n      const { e } = action;\n      return { ...checkoutState, [e.target.id]: e.target.value };\n    case \"handle-touched-change\":\n      const { event } = action;\n      return { ...checkoutState, [event.target.id]: true };\n  }\n};\n","import React from \"react\";\nimport { cartReducer, checkoutReducer } from \"./Reducer\";\n\n// cart context\nexport const CartContext = React.createContext(null);\n\n// Safely parse cart from localStorage\nlet initialCartState = [];\ntry {\n  const storedCart = localStorage.getItem(\"cart\");\n  if (storedCart) {\n    initialCartState = JSON.parse(storedCart);\n  }\n} catch (error) {\n  console.error(\"The cart could not be parsed into JSON.\", error);\n}\n\nexport function CartProvider(props) {\n  const [cart, dispatch] = React.useReducer(cartReducer, initialCartState);\n\n  React.useEffect(() => {\n    try {\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    } catch (error) {\n      console.error(\"Failed to write cart to localStorage.\", error);\n    }\n  }, [cart]);\n\n  return (\n    <CartContext.Provider value={{ cart, dispatch }}>\n      {props.children}\n    </CartContext.Provider>\n  );\n}\n\n// shipping context\nexport const ShippingContext = React.createContext(null);\n\n// Safely parse shipping address from localStorage\nlet initialShippingAddress = {};\ntry {\n  const storedAddress = localStorage.getItem(\"shipping-address\");\n  if (storedAddress) {\n    initialShippingAddress = JSON.parse(storedAddress);\n  }\n} catch (error) {\n  console.error(\"Shipping address could not be parsed into JSON.\", error);\n}\n\nexport function ShippingAddressProvider(props) {\n  const [shippingAddress, dispatchShipping] = React.useReducer(\n    checkoutReducer,\n    initialShippingAddress\n  );\n\n  React.useEffect(() => {\n    try {\n      localStorage.setItem(\n        \"shipping-address\",\n        JSON.stringify(shippingAddress)\n      );\n    } catch (error) {\n      console.error(\"Failed to write shipping address to localStorage.\", error);\n    }\n  }, [shippingAddress]);\n\n  return (\n    <ShippingContext.Provider value={{ shippingAddress, dispatchShipping }}>\n      {props.children}\n    </ShippingContext.Provider>\n  );\n}\n","import React from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { CartContext } from \"../others/Context\";\nimport PageNotFound from \"./PageNotFound\";\nimport useFetch from \"../services/useFetch\";\nimport Spinner from \"../components//Spinner\";\n\nexport default function Detail() {\n  const { dispatch } = React.useContext(CartContext);\n  const [sku, setSku] = React.useState(\"\");\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const { data: product, error, loading } = useFetch(\"products/\" + id);\n\n  if (loading) return <Spinner />;\n  if (!product) return <PageNotFound />;\n  if (error) throw error;\n\n  return (\n    <div id=\"detail\">\n      <div className=\"detail-column\">\n        <h1>{product.name}</h1>\n        <p>{product.description}</p>\n        <p id=\"price\">${product.price}</p>\n        <select id=\"size\" value={sku} onChange={(e) => setSku(e.target.value)}>\n          <option value=\"\">Size</option>\n          {product.skus.map((s) => (\n            <option key={s.sku} value={s.sku}>\n              {s.size}\n            </option>\n          ))}\n        </select>\n        <p>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => {\n              dispatch({ type: \"add-to-cart\", id, sku });\n              navigate(\"/cart\");\n            }}\n            disabled={!sku}\n          >\n            Add to Cart\n          </button>\n        </p>\n      </div>\n      <div className=\"detail-column\">\n        <img src={`/images/${product.image}`} alt={product.category} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function useFetchAll(urls) {\n  const isMounted = React.useRef(false);\n  const [data, setData] = React.useState(null);\n  const [loading, setLoading] = React.useState(true);\n  const [error, setError] = React.useState(null);\n\n  React.useEffect(() => {\n    isMounted.current = true;\n    const promises = urls.map((url) =>\n      fetch(process.env.REACT_APP_API_BASE_URL + url).then((response) => {\n        if (response.ok) return response.json();\n        throw response;\n      })\n    );\n\n    Promise.all(promises)\n      .then((json) => {\n        if (isMounted.current) setData(json);\n      })\n      .catch((e) => {\n        console.error(e);\n        if (isMounted.current) setError(e);\n      })\n      .finally(() => {\n        if (isMounted.current) setLoading(false);\n      });\n\n    return () => (isMounted.current = false);\n  }, []);\n\n  return { data, loading, error };\n}\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { CartContext } from \"../others/Context\";\nimport useFetchAll from \"../services/useFetchAll\";\nimport Spinner from \"../components/Spinner\";\n\nexport default function Cart() {\n  const { cart, dispatch } = React.useContext(CartContext);\n  const navigate = useNavigate();\n  const urls = cart.map((i) => `products/${i.id}`);\n  const { data: products, loading, error } = useFetchAll(urls);\n\n  function renderItem(itemInCart) {\n    const { id, sku, quantity } = itemInCart;\n    const { price, name, image, skus } = products.find(\n      (p) => p.id === parseInt(id)\n    );\n\n    const { size } = skus.find((s) => s.sku === sku);\n\n    return (\n      <li key={sku} className=\"cart-item\">\n        <img src={`/images/${image}`} alt={name} />\n        <div>\n          <h3>{name}</h3>\n          <p>${price * quantity}</p>\n          <p>Size: {size}</p>\n          <p>\n            <select\n              aria-label={`Select quantity for ${name} size ${size}`}\n              onChange={(e) =>\n                dispatch({\n                  type: \"update-cart-quantity\",\n                  sku,\n                  quantity: parseInt(e.target.value),\n                })\n              }\n              value={quantity}\n            >\n              <option value=\"0\">Remove</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n            </select>\n          </p>\n        </div>\n      </li>\n    );\n  }\n\n  const numInCart = React.useMemo(\n    () => cart.reduce((total, item) => total + item.quantity, 0),\n    [cart]\n  );\n\n  if (loading) return <Spinner />;\n  if (error) throw error;\n\n  return (\n    <>\n      <section id=\"cart\">\n        {cart.length === 0 ? (\n          <h1>Cart is empty</h1>\n        ) : numInCart === 1 ? (\n          `${numInCart} item found`\n        ) : (\n          `${numInCart} items found`\n        )}\n        <ul>{cart.map(renderItem)}</ul>\n      </section>\n      {cart.length ? (\n        <p>\n          <button\n            className=\"btn btn-primary\"\n            onClick={() => navigate(\"/checkout\")}\n          >\n            Checkout\n          </button>\n        </p>\n      ) : null}\n    </>\n  );\n}\n","const baseUrl = process.env.REACT_APP_API_BASE_URL;\n\nconst shippingAddress = [\n  {\n    \"city\": \"Mumbai\",\n    \"country\": \"India\",\n    \"id\": 1\n  },\n  {\n    \"city\": \"London\",\n    \"country\": \"United Kingdom\",\n    \"id\": 2\n  },\n  {\n    \"country\": \"United Kingdom\",\n    \"city\": \"London\",\n    \"id\": 3\n  }\n];\n\n// export async function getShippingAddress(userId) {\n//   return fetch(baseUrl + \"shippingAddress/\" + userId).then((response) => {\n//     if (response.ok) return response.json();\n//     throw response;\n//   });\n// }\n\n// export async function saveShippingAddress(address) {\n//   return fetch(baseUrl + \"shippingAddress\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(address),\n//   });\n// }\n\nexport async function getShippingAddress(userId) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const address = shippingAddress.find((addr) => addr.id === parseInt(userId));\n      if (address) resolve(address);\n      else reject(new Error(\"Shipping address not found\"));\n    }, 200);\n  });\n}\n\nexport async function saveShippingAddress(address) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const index = shippingAddress.findIndex((a) => a.id === address.id);\n      if (index >= 0) {\n        shippingAddress[index] = address;\n      } else {\n        shippingAddress.push(address);\n      }\n      resolve({ success: true });\n    }, 200);\n  });\n}\n","import React from \"react\";\nimport { CartContext, ShippingContext } from \"../others/Context\";\nimport { checkoutReducer } from \"../others/Reducer\";\nimport { saveShippingAddress } from \"../services/shippingService\";\nimport useFetchAll from \"../services/useFetchAll\";\nimport Spinner from \"../components/Spinner\";\n\nconst STATUS = {\n  IDLE: \"IDLE\",\n  SUBMITTING: \"SUBMITTING\",\n  SUBMITTED: \"SUBMITTED\",\n  COMPLETED: \"COMPLETED\",\n  PAYED: \"PAYED\",\n};\n\n// Declaring outside component to avoid recreation on each render\nconst emptyAddress = {\n  city: \"\",\n  country: \"\",\n};\n\nexport default function Checkout() {\n  let totalPrice = 0;\n  const { cart, dispatch } = React.useContext(CartContext);\n  const urls = cart.map((i) => `products/${i.id}`);\n  const { data: products, loading, error } = useFetchAll(urls);\n  const { shippingAddress, dispatchShipping } =\n    React.useContext(ShippingContext);\n\n  // const [address, setAddress] = React.useState(emptyAddress);\n  // const [address, dispatchAddress] = React.useReducer(\n  //   checkoutReducer,\n  //   emptyAddress\n  // );\n  const [status, setStatus] = React.useState(STATUS.IDLE);\n  const [saveError, setSaveError] = React.useState(null);\n  // const [touched, setTouched] = React.useState({});\n  const [touched, dispatchTouched] = React.useReducer(checkoutReducer, {});\n\n  const errors = getErrors(shippingAddress);\n  const isValid = Object.keys(errors).length === 0;\n\n  function getErrors(address) {\n    const result = {};\n    if (!address.city) result.city = \"city is required\";\n    if (!address.country) result.country = \"country is required\";\n    return result;\n  }\n\n  function handleChange(e) {\n    e.persist();\n    // setAddress((currAddress) => {\n    //   return { ...currAddress, [e.target.id]: e.target.value };\n    // });\n    dispatchShipping({ type: \"handle-address-change\", e });\n  }\n\n  function handleBlur(event) {\n    event.persist();\n    // setTouched((curr) => {\n    //   return { ...curr, [event.target.id]: true };\n    // });\n    dispatchTouched({ type: \"handle-touched-change\", event });\n  }\n\n  function handleCheckout(e) {\n    e.preventDefault();\n    dispatch({ type: \"empty-cart\" });\n    setStatus(STATUS.PAYED);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setStatus(STATUS.SUBMITTING);\n    if (isValid) {\n      try {\n        localStorage.setItem(\n          \"shipping-address\",\n          JSON.stringify(shippingAddress)\n        );\n        await saveShippingAddress(shippingAddress);\n        setStatus(STATUS.COMPLETED);\n      } catch (e) {\n        setSaveError(e);\n      }\n    } else {\n      setStatus(STATUS.SUBMITTED);\n    }\n  }\n\n  function renderItem(itemInCart) {\n    const { id, sku, quantity } = itemInCart;\n    const { price, name, image, skus } = products.find(\n      (p) => p.id === parseInt(id)\n    );\n    const { size } = skus.find((s) => s.sku === sku);\n\n    totalPrice = totalPrice + price * quantity;\n\n    return (\n      <li key={sku} className=\"cart-item\">\n        <img src={`/images/${image}`} alt={name} />\n        <div>\n          <h3>{name}</h3>\n          <p>${price * quantity}</p>\n          <p>Size: {size}</p>\n          <p>Quantity: {quantity}</p>\n        </div>\n      </li>\n    );\n  }\n\n  const numInCart = React.useMemo(\n    () => cart.reduce((total, item) => total + item.quantity, 0),\n    [cart]\n  );\n\n  if (loading) return <Spinner />;\n  if (error) throw error;\n  if (saveError) throw saveError;\n  if (status === STATUS.PAYED) return <h1>Thanks for shopping</h1>;\n\n  return (\n    <>\n      {shippingAddress.city && shippingAddress.country ? (\n        <main id=\"checkout-main\">\n          <div className=\"cart\">\n            <h1>Cart</h1>\n            <section id=\"cart\">\n              {numInCart === 1\n                ? `${numInCart} item found`\n                : `${numInCart} items found`}\n              <ul>{cart.map(renderItem)}</ul>\n            </section>\n            <p style={{ color: \"green\", fontWeight: \"bold\" }}>{`$ ${Math.ceil(\n              totalPrice\n            )}`}</p>\n            <form onSubmit={handleCheckout}>\n              <div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  value=\"Checkout\"\n                  disabled={status === STATUS.SUBMITTING}\n                />\n              </div>\n            </form>\n          </div>\n\n          <div className=\"shipping-info\">\n            <div style={{ marginBottom: 20 }}>\n              <h1>Shipping Info</h1>\n            </div>\n            {!isValid && status === STATUS.SUBMITTED && (\n              <div role=\"alert\">\n                <p>Please fix the following errors</p>\n                <ul>\n                  {Object.keys(errors).map((errKey) => {\n                    return <li key={errKey}>{errors[errKey]}</li>;\n                  })}\n                </ul>\n              </div>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"city\">City</label>\n                <br />\n                <input\n                  id=\"city\"\n                  type=\"text\"\n                  value={shippingAddress.city}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.city || status === STATUS.SUBMITTED) && errors.city}\n                </p>\n              </div>\n\n              <div>\n                <label htmlFor=\"country\">Country</label>\n                <br />\n                <select\n                  id=\"country\"\n                  value={shippingAddress.country}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">Select Country</option>\n                  <option value=\"China\">China</option>\n                  <option value=\"India\">India</option>\n                  <option value=\"United Kingdom\">United Kingdom</option>\n                  <option value=\"USA\">USA</option>\n                </select>\n                <p role=\"alert\">\n                  {(touched.country || status === STATUS.SUBMITTED) &&\n                    errors.country}\n                </p>\n              </div>\n\n              <div>\n                {status === STATUS.COMPLETED && (\n                  <p style={{ color: \"blue\" }}>Shipping address saved</p>\n                )}\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  value=\"Save Shipping Info\"\n                  disabled={status === STATUS.SUBMITTING}\n                />\n              </div>\n            </form>\n          </div>\n        </main>\n      ) : (\n        <main id=\"checkout-main\">\n          <div className=\"shipping-info\">\n            <h1>Shipping Info</h1>\n            {!isValid && status === STATUS.SUBMITTED && (\n              <div role=\"alert\">\n                <p>Please fix the following errors</p>\n                <ul>\n                  {Object.keys(errors).map((errKey) => {\n                    return <li key={errKey}>{errors[errKey]}</li>;\n                  })}\n                </ul>\n              </div>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div>\n                <label htmlFor=\"city\">City</label>\n                <br />\n                <input\n                  id=\"city\"\n                  type=\"text\"\n                  value={shippingAddress.city}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                />\n                <p role=\"alert\">\n                  {(touched.city || status === STATUS.SUBMITTED) && errors.city}\n                </p>\n              </div>\n\n              <div>\n                <label htmlFor=\"country\">Country</label>\n                <br />\n                <select\n                  id=\"country\"\n                  value={shippingAddress.country}\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                >\n                  <option value=\"\">Select Country</option>\n                  <option value=\"China\">China</option>\n                  <option value=\"India\">India</option>\n                  <option value=\"United Kingdom\">United Kingdom</option>\n                  <option value=\"USA\">USA</option>\n                </select>\n                <p role=\"alert\">\n                  {(touched.country || status === STATUS.SUBMITTED) &&\n                    errors.country}\n                </p>\n              </div>\n\n              <div>\n                {status === STATUS.COMPLETED && (\n                  <p style={{ color: \"blue\" }}>Shipping address saved</p>\n                )}\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  value=\"Save Shipping Info\"\n                  disabled={status === STATUS.SUBMITTING}\n                />\n              </div>\n            </form>\n          </div>\n        </main>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport useFetch from \"../services/useFetch\";\nimport Spinner from \"../components/Spinner\";\nimport PageNotFound from \"./PageNotFound\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  const [category, setCategory] = React.useState(\"\");\n\n  const { data: products, error, loading } = useFetch(\"products\");\n\n  const filteredProducts = category\n    ? products.filter((p) => p.category === category)\n    : products;\n\n  if (error) throw error;\n  if (loading) return <Spinner />;\n  if (products.length === 0) return <PageNotFound />;\n\n  const array = products.map((p) => {\n    return p.category;\n  });\n\n  const prodCat = [...new Set(array)];\n\n  return (\n    <>\n      <section id=\"filters\">\n        <label htmlFor=\"size\">Filter by Category:</label>{\" \"}\n        <select\n          id=\"size\"\n          value={category}\n          onChange={(e) => {\n            setCategory(e.target.value);\n          }}\n        >\n          <option value=\"\">Select category</option>\n          {prodCat.map((c) => (\n            <option key={c} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n      </section>\n      {category && <h2>{filteredProducts.length} items found</h2>}\n      <section id=\"products\">\n        {filteredProducts.map((p) => (\n          <div key={p.id} className=\"product\">\n            <Link to={`/${p.category}/${p.id}`}>\n              <img src={`/images/${p.image}`} alt={p.name} />\n              <h3>{p.name}</h3>\n              <p>${p.price}</p>\n            </Link>\n          </div>\n        ))}\n      </section>\n    </>\n  );\n}\n","import React from \"react\";\nimport \"./styles/App.css\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Products from \"./pages/Products\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Detail from \"./pages/Detail\";\nimport Cart from \"./pages/Cart\";\nimport Checkout from \"./pages/Checkout\";\nimport { ShippingAddressProvider } from \"./others/Context\";\nimport Home from \"./pages/Home\";\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"content\">\n        <Header />\n        <main>\n          <Routes>\n            <Route\n              path=\"/\"\n              element={\n                <>\n                  <h1>Welcome to Fitness Care</h1>\n                  <Home />\n                </>\n              }\n            />\n            <Route path=\"/:category\" element={<Products />} />\n            <Route path=\"/:category/:id\" element={<Detail />} />\n            <Route path=\"/cart\" element={<Cart />} />\n            <Route\n              path=\"/checkout\"\n              element={\n                <ShippingAddressProvider>\n                  <Checkout />\n                </ShippingAddressProvider>\n              }\n            />\n          </Routes>\n        </main>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport ErrorBoundary from \"./others/ErrorBoundary\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CartProvider } from \"./others/Context\";\n\nReactDOM.render(\n  <ErrorBoundary>\n    <BrowserRouter>\n      <CartProvider>\n        <App />\n      </CartProvider>\n    </BrowserRouter>\n  </ErrorBoundary>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}